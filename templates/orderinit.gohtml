{{template "header"}}

    <nav class="navbar fixed-top navbar-expand navbar-dark topnav-dark bg-dark">
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item">
                <a class="navbar-brand" href="#"><img src="/assets/images/spacemesh_logo.png" class="logo"/></a>
            </li>
            <li class="nav-item">
              <div class="topnav-item" style="position: relative;">
                <div class="topnav-link"></div>
                <a class="nav-link" href="/"><i class="fad fa-rocket-launch topnav-icon"></i> Dashboard <span class="sr-only">(current)</span></a>
              </div>
            </li>
            <li class="nav-item active">
              <div class="topnav-item" style="position: relative;">
                <div class="topnav-link topnav-active"></div>
                <a class="nav-link" href="/orderbook"><i class="fad fa-exchange-alt topnav-icon"></i> Trade</a>
              </div>
            </li>
            <li class="nav-item">
              <div class="topnav-item" style="position: relative;">
                <div class="topnav-link"></div>
                <a class="nav-link" href="/history"><i class="fad fa-history topnav-icon"></i> Trade History</a>
              </div>
            </li>
          </ul>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="navbar-nav ml-auto">
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle dropdown-toggle-right" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"  style="padding: 12px 20px;">
                  <i class="fad fa-user-astronaut" style="font-size: 35px;"></i> <i class="far fa-angle-down" style="font-size: 25px; margin-left: 15px;"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                  <a class="dropdown-item topnav-dropdown-item" href="#"><i class="fad fa-user-astronaut topnav-icon"></i> Profile</a>
                  <a class="dropdown-item topnav-dropdown-item" href="#"><i class="fad fa-cog topnav-icon"></i> Settings</a>
                  <a class="dropdown-item topnav-dropdown-item" href="https://github.com/Meshbits/Shurli/issues/new" target="_blank"><i class="fad fa-brackets-curly topnav-icon"></i> Request a Feature</a>
                </div>
              </li>
          </ul>
        </div>
        {{/* <form class="form-inline">
            {{template "menu-button-array"}}
        </form> */}}
    </nav>

    <div class="container-fluid" style="margin-top: 60px;">
    

      <div class="row justify-content-md-center" style="margin-bottom: 1em;">

        {{template "bs-order-stepper"}}

        <div class="col-md-4">

          <div class="card text-white bg-dark mb-2">
            <div class="card-header">
              <div class="font-weight-bold"><i class="far fa-wallet" style="color: #5fd9ff; font-size: 130%;"></i> Current Balance</div>
            </div>
            <div clas="card-body">
              <table class="table table-dark table-striped table-card">
                <tr>
                  <td>{{.OrderData.Base}}</td>
                  <td>{{if not .OrderData.ZBase}} {{if eq .OrderData.Base "PIRATE"}} {{.OrderData.ZBaseBal}} {{.OrderData.Base}} {{else}} {{.OrderData.BaseBal}} {{.OrderData.Base}} {{end}} {{else}} {{.OrderData.ZBaseBal}} {{.OrderData.Base}} {{end}}</td>
                  {{/* <td>{{.OrderData.BaseBal}}</td> */}}
                </tr>
                <tr>
                  <td>{{.OrderData.Rel}}</td>
                  <td>{{if not .OrderData.ZRel}} {{if eq .OrderData.Rel "PIRATE"}} {{.OrderData.ZRelBal}} {{.OrderData.Rel}} {{else}} {{.OrderData.RelBal}} {{.OrderData.Rel}} {{end}} {{else}} {{.OrderData.ZRelBal}} {{.OrderData.Rel}} {{end}}</td>
                  {{/* <td>{{.OrderData.RelBal}}</td> */}}
                </tr>
              </table>
            </div>
          </div>

          <div class="card text-white bg-dark">
            <div class="card-header">
              <div class="font-weight-bold"><i class="far fa-wallet" style="color: #5fd9ff; font-size: 130%;"></i> Order Info</div>
            </div>
            <div clas="card-body">
              <table class="table table-dark table-striped table-card">
                <tr>
                  <td>Order ID</td>
                  <td>{{.ID}}</td>
                </tr>
                <tr>
                  <td>Selling</td>
                  <td>{{.Total}} {{.OrderData.Base}}</td>
                </tr>
                <tr>
                  <td>Buying</td>
                  <td>{{.Amount}} {{.OrderData.Rel}}</td>
                </tr>
              </table>
            </div>
          </div>

          <div class="card text-white bg-dark">
            <div clas="card-body">
              <div class="time-elapsed text-center" style="font-size: 200%;"></div>
            </div>
          </div>

        </div>

        <div class="col-md-6"> <!-- OrderStatus div start -->
            <div class="card text-white bg-dark mb-2"> <!-- OrderStatus card start -->
                <div class="card-header">
                  Order Status
                </div>
                <div class="card-body" style="font-size: 18px;"> <!-- OrderStatus body start -->
                    <div class="progress">
                      <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                    </div>
                    <p class="swapstatus" style="text-align: center; font-size: 130%;"></p>
                    <table class="table table-dark table-striped table-card">
                      <tr>
                        <td>{{.OrderData.Base}} Tx ID</td>
                        <td class="wrapword"><span class="base-txid"></span></td>
                      </tr>
                      <tr>
                        <td>{{.OrderData.Rel}} Tx ID</td>
                        <td class="wrapword"><span class="rel-txid"></span></td>
                      </tr>
                    </table>
                    <h4 class="mt-3 text-center swap-rawlogs-h" style="display: none;"><u>Raw order logs</u></h4>
                    <code class="swap-rawlogs" style="display: none;"></code>
                    <script>
                      var ws = new WebSocket("ws://localhost:8080/echo")
                      {{/* console.log("{{.OrderData.Base}}")
                      console.log("{{.ID}}")
                      console.log("{{.Amount}}")
                      console.log("{{.Total}}") */}}
                      tmpJson = ["{{.OrderData.Base}}","{{.ID}}", "{{.Total}}"]
                      console.log(tmpJson)
                      
                      ws.onopen = function(event) {
                        console.log("WebSocket is open now.");
                        ws.send(JSON.stringify(tmpJson))
                      };
                      
                      ws.onmessage = function(e) {

                        //console.log(e.data)
                        swap_json = JSON.parse(e.data)

                        // Order time elapsed counter
                        let interval = 1000;
                        //console.log(swap_json.state);
                        if (swap_json.state == "Starting...") {
                          console.log("Starting: "+swap_json.state);
                          orderTimeElapsed();
                        }

                        // order time elapsed counter
                        var swInterval;
                        function orderTimeElapsed(){
                          let startTime = moment().unix();
                          swInterval = setInterval(function(){
                            let currentTime = moment().unix();
                            let diffTime = currentTime - startTime;
                            let duration = moment.duration(diffTime*1000, 'milliseconds');
                            //console.log(duration.minutes() + ":" + duration.seconds());
                            var minutes;
                            if (duration.minutes() <= 9) {
                              minutes = "0"+duration.minutes();
                            } else {
                              minutes = duration.minutes();
                            }
                            var seconds;
                            if (duration.seconds() <= 9) {
                              seconds = "0"+duration.seconds();
                            } else {
                              seconds = duration.seconds();
                            }
                            //console.log(minutes + ":" + seconds);
                            $('.time-elapsed').html(`<i class="fad fa-alarm-clock" style="color: #17a2b8;"></i> ` + minutes + ":" + seconds + ` <small>(mm:ss)</small>`);
                            if (swap_json.state == "signal: killed") {
                              console.log("signal: killed: "+swap_json.state);
                              $('.time-elapsed').html(`<i class="fad fa-exclamation-triangle" style="color: #dc3545;"></i> ` + minutes + ":" + seconds + ` <small>(mm:ss)</small>`);
                              clearInterval(swInterval);
                            }
                            if (swap_json.state == "exit status 255") {
                              console.log("signal: killed: "+swap_json.state);
                              $('.time-elapsed').html(`<i class="fad fa-exclamation-triangle" style="color: #dc3545;"></i> ` + minutes + ":" + seconds + ` <small>(mm:ss)</small>`);
                              clearInterval(swInterval);
                            }
                            if (swap_json.state == "Finished") {
                              console.log("Finished: "+swap_json.state);
                              $('.time-elapsed').html(`<i class="fad fa-check-circle" style="color: #28a745;"></i> ` + minutes + ":" + seconds + ` <small>(mm:ss)</small>`);
                              clearInterval(swInterval);
                            }
                          }, interval)
                        }

                        //function stopTimer(){
                          //clearInterval(swInterval);
                        //}

                        //console.log(swap_json.status)
                        switch (swap_json.status) {
                          case "0": 
                            $('.progress-bar').css('width', '14.28%')
                            $('.progress-bar').attr('aria-valuenow', '14.28')
                            $('.swapstatus').text("Buyer's trading channel open Request")
                            break;
                          case "1":
                            $('.progress-bar').css('width', '28.56%')
                            $('.progress-bar').attr('aria-valuenow', '28.56')
                            $('.swapstatus').text("Buyer's trading channel open request approved")
                            break;
                          case "2":
                            $('.progress-bar').css('width', '42.84%')
                            $('.progress-bar').attr('aria-valuenow', '42.84')
                            $('.swapstatus').text("Incoming seller's channel")
                            break;
                          case "3":
                            $('.progress-bar').css('width', '57.12%')
                            $('.progress-bar').attr('aria-valuenow', '57.12')
                            $('.swapstatus').text("Sent your {{.OrderData.Base}} funds to seller ")
                            break;
                          case "4":
                            $('.progress-bar').css('width', '71.4%')
                            $('.progress-bar').attr('aria-valuenow', '71.4')
                            $('.progress-bar').attr('class', 'progress-bar progress-bar-striped progress-bar-animated bg-primary')
                            if (swap_json.state == "received") {
                              $('.swapstatus').text("Received {{.OrderData.Rel}} from seller")
                            } else if (swap_json.state == "SWAP COMPLETE") {
                              $('.swapstatus').text("SWAP COMPLETE!")
                            } else {
                              $('.swapstatus').text("Receiving {{.OrderData.Rel}} from seller")
                              rellink = "{{.RelExplorer}}tx/" + swap_json.rel_txid
                              $('.rel-txid').html("<a href="+rellink+" target=\"_blank\">"+swap_json.rel_txid+"</a>")
                            }
                            break;
                          case "5":
                            $('.progress-bar').css('width', '85.68%')
                            $('.progress-bar').attr('aria-valuenow', '85.68')
                            $('.swapstatus').text("Insured {{.OrderData.Base}} Payment Fully Paid")
                            break;
                          case "6":
                            $('.progress-bar').css('width', '100%')
                            $('.progress-bar').attr('aria-valuenow', '100')
                            $('.progress-bar').attr('class', 'progress-bar progress-bar-striped bg-success')
                            switch (swap_json.state) {
                              case "incomingclose":
                                $('.swapstatus').text("Trade channel with Seller closed.")
                                break;
                              case "opid":
                                tmpJson = {"opid": swap_json.base_txid,"coin":"{{.OrderData.Base}}"}
                                ws.send(JSON.stringify(tmpJson))
                                break;
                              case "opid_txid":
                                $('.swapstatus').text("Swap finished Successfully!")
                                baselink = "{{.BaseExplorer}}tx/" + swap_json.base_txid
                                $('.base-txid').html("<a href="+baselink+" target=\"_blank\">"+swap_json.base_txid+"</a>")
                                //stopTimer();
                                break;
                              case "dpow_broadcast":
                                $('.swapstatus').text("Swap finished Successfully!")
                                baselink = "{{.BaseExplorer}}tx/" + swap_json.base_txid
                                $('.base-txid').html("<a href="+baselink+" target=\"_blank\">"+swap_json.base_txid+"</a>")
                                //stopTimer();
                                break;
                            }
                            break;
                        }

                        if (swap_json.state == "signal: killed") {
                          $('.progress-bar').css('width', '100%')
                          $('.progress-bar').attr('aria-valuenow', '100')
                          $('.progress-bar').attr('class', 'progress-bar progress-bar-striped bg-danger')
                          $('.swapstatus').attr('style', 'text-align: center;')
                          $('.swapstatus').html(`<div class="alert alert-danger mt-1" role="alert">
                                                  Order timed-out. Something went wrong :(<br>Log of this trade is saved in swaplogs directory for your reference.
                                                  </div>`)
                        }

                        document.querySelector("code").innerHTML += e.data + "<br>"

                      }
                    </script>
                </div> <!-- OrderStatus body end -->
                <div class="card-footer">
                  <div class="row">
                    <div class="col-6" style="text-align: left;">
                      <form action="/orderbook" method="POST">
                        <input type="hidden" name="coin_base" value="{{.OrderData.Rel}}">
                        <input type="hidden" name="coin_rel" value="{{.OrderData.Base}}">
                        <input type="hidden" name="result_limit" value="100">
                        <input type="hidden" name="sortby" value="soon">
                        <button type="submit" class="btn btn-secondary">back</button>
                      </form>
                    </div>
                    <div class="col-6" style="text-align: right;">
                      <div class="form-check pl-0">
                        <label for="toggle-rawlogs" class="toggle-rawlogs-label">Raw Logs</label>
                        <input type="checkbox" id="toggle-rawlogs" class="toggle-rawlogs" data-toggle="toggle" data-on="shown" data-off="hidden" data-onstyle="info" data-offstyle="primary" data-size="xs">
                      </div>
                    </div>
                  </div>
                </div>
            </div> <!-- OrderStatus card end -->
        </div> <!-- OrderStatus div end -->
      </div>
    
    </div>
{{template "footer-scripts"}}
<script>
  $( document ).ready(function() {
    var stepper = new Stepper($('.bs-stepper')[0])
    stepper.to(3)
  });

  // Show hide raw logs elements
  $('.toggle-rawlogs').change(function() {
    if ($(this).prop('checked') == false) {
      $('.swap-rawlogs-h').hide();
      $('.swap-rawlogs').hide();
    }
    if ($(this).prop('checked') == true) {
      $('.swap-rawlogs-h').show();
      $('.swap-rawlogs').show();
    }
  })
</script>

{{template "footer"}}

